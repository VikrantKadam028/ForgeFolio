<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Login</title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Audiowide&family=Inconsolata:wght@200..900&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Righteous&display=swap"
      rel="stylesheet"
    />
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: poppins;
      }

      body {
        font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
          "Helvetica Neue", Arial, sans-serif;
        background-color: #f9fafb;
        min-height: 100vh;
        background-color: black;
      }

      .container {
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 1rem;
        min-height: 100vh;
        background-color: black;
      }

      .form-wrapper {
        width: 100%;
        max-width: 28rem;
      }

      .progress-container {
        margin-bottom: 1.5rem;
      }

      .progress-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 0.75rem;
      }

      .progress-text {
        font-size: 0.875rem;
        font-weight: 500;
        color: #111827;
      }

      .progress-percent {
        font-size: 0.875rem;
        color: #6b7280;
      }

      .progress-bar {
        width: 100%;
        background-color: #e5e7eb;
        border-radius: 9999px;
        height: 0.5rem;
        overflow: hidden;
      }

      .progress-fill {
        background-color: #111827;
        height: 0.5rem;
        border-radius: 9999px;
        transition: width 0.5s cubic-bezier(0.4, 0, 0.2, 1);
      }

      .signin-card {
        background-color: white;
        border: 1px solid #e5e7eb;
        border-radius: 0.5rem;
        box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);
        padding: 1.5rem;
        animation: fadeIn 0.3s ease-out;
      }

      .header {
        text-align: center;
        margin-bottom: 1.5rem;
      }

      .icon-container {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        width: 3rem;
        height: 3rem;
        border-radius: 50%;
        margin-bottom: 0.6rem;
      }
      .icon-container img {
        width: 100%;
        height: 100%;
        object-fit: contain;
      }

      .title {
        font-size: 1.5rem;
        font-weight: 600;
        color: #111827;
        margin-bottom: 0.5rem;
      }

      .subtitle {
        font-size: 0.875rem;
        color: #6b7280;
      }

      .form {
        display: flex;
        flex-direction: column;
        gap: 1rem;
      }

      .signin-step {
        display: flex;
        flex-direction: column;
        gap: 1rem;
        animation: slideIn 0.3s ease-out;
      }

      .field-group {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
      }

      .label {
        font-size: 0.875rem;
        font-weight: 500;
        color: #111827;
      }

      .input-container {
        position: relative;
      }

      .input-icon {
        position: absolute;
        top: 50%;
        left: 0.75rem;
        transform: translateY(-50%);
        color: #9ca3af;
        pointer-events: none;
      }

      .signin-input {
        width: 100%;
        padding: 0.5rem 0.75rem;
        background-color: white;
        border: 1px solid #d1d5db;
        border-radius: 0.375rem;
        font-size: 0.875rem;
        color: #111827;
        transition: all 0.2s;
      }

      .signin-input:focus {
        outline: none;
        outline-width: 0;
        outline-style: none;
        border-color: transparent;
        box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.1);
      }

      .signin-input::placeholder {
        color: #6b7280;
      }

      .input-with-icon {
        padding-left: 2.25rem;
      }

      .input-with-toggle {
        padding-right: 2.5rem;
      }

      .check-icon {
        position: absolute;
        right: 0.75rem;
        top: 50%;
        transform: translateY(-50%);
        color: #22c55e;
      }

      .toggle-button {
        position: absolute;
        right: 0.75rem;
        top: 50%;
        transform: translateY(-50%);
        background: none;
        border: none;
        color: #9ca3af;
        cursor: pointer;
        padding: 0;
        transition: color 0.2s;
      }

      .toggle-button:hover {
        color: #6b7280;
      }

      .signin-button {
        width: 100%;
        background-color: #111827;
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 0.375rem;
        font-size: 0.875rem;
        font-weight: 500;
        border: none;
        cursor: pointer;
        transition: all 0.2s;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
      }

      .signin-button:hover {
        background-color: #1f2937;
        transform: translateY(-1px);
      }

      .signin-button:focus {
        outline: none;
        outline-width: 0;
        outline-style: none;
      }

      .signin-button:disabled {
        opacity: 0.5;
        cursor: not-allowed;
        transform: none;
      }

      .google-signin-button {
        background-color: #4285f4; /* Google blue */
        color: white;
      }

      .google-signin-button:hover {
        background-color: #357ae8;
      }

      .google-icon {
        width: 18px;
        height: 18px;
        background-color: white;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 2px;
      }
      .google-icon img {
        width: 100%;
        height: 100%;
        object-fit: contain;
      }

      .review-section {
        background-color: #f9fafb;
        border: 1px solid #e5e7eb;
        padding: 1rem;
        border-radius: 0.375rem;
      }

      .review-header {
        font-weight: 500;
        color: #111827;
        margin-bottom: 0.75rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
      }

      .review-details {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
        font-size: 0.875rem;
      }

      .review-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0.25rem 0;
      }

      .review-label {
        color: #6b7280;
      }

      .review-value {
        color: #111827;
        font-weight: 500;
      }

      .back-button {
        margin-top: 1rem;
        width: 100%;
        background: none;
        border: none;
        color: #6b7280;
        font-size: 0.875rem;
        font-weight: 500;
        cursor: pointer;
        transition: color 0.2s;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
        padding: 0.5rem;
      }

      .back-button:hover {
        color: #111827;
      }

      .forgot-password {
        text-align: center;
        margin-top: 0.5rem;
      }

      .forgot-password a {
        color: #111827;
        font-size: 0.875rem;
        text-decoration: none;
        font-weight: 500;
      }

      .forgot-password a:hover {
        text-decoration: underline;
      }

      .footer {
        margin-top: 1.5rem;
        text-align: center;
      }

      .footer-text {
        font-size: 0.875rem;
        color: #6b7280;
      }

      .footer-link {
        color: #111827;
        font-weight: 500;
        text-decoration: none;
      }

      .footer-link:hover {
        text-decoration: underline;
      }

      .spinner {
        width: 1rem;
        height: 1rem;
        border: 2px solid white;
        border-top: 2px solid transparent;
        border-radius: 50%;
        animation: spin 1s linear infinite;
      }

      .hidden {
        display: none;
      }

      @keyframes fadeIn {
        from {
          opacity: 0;
          transform: translateY(10px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      @keyframes slideIn {
        from {
          opacity: 0;
          transform: translateX(20px);
        }
        to {
          opacity: 1;
          transform: translateX(0);
        }
      }

      @keyframes spin {
        from {
          transform: rotate(0deg);
        }
        to {
          transform: rotate(360deg);
        }
      }

      /* Dark mode styles */
      @media (prefers-color-scheme: dark) {
        body {
          background-color: #0f172a;
          color: #f1f5f9;
        }

        .progress-text {
          color: #f1f5f9;
        }

        .progress-percent {
          color: #94a3b8;
        }

        .progress-bar {
          background-color: #1e293b;
        }

        .progress-fill {
          background-color: #f1f5f9;
        }

        .signin-card {
          background-color: #000000;
          border-color: #1e293b;
        }

        .title {
          color: #f1f5f9;
        }

        .subtitle {
          color: #94a3b8;
        }

        .label {
          color: #f1f5f9;
        }

        .signin-input {
          background-color: #000000;
          border-color: #1e293b;
          color: #f1f5f9;
        }

        .signin-input:focus {
          box-shadow: 0 0 0 2px rgba(255, 255, 255, 0.1);
        }

        .signin-input::placeholder {
          color: #94a3b8;
        }

        .signin-button {
          background-color: #f1f5f9;
          color: #1e293b;
        }

        .signin-button:hover {
          background-color: #e2e8f0;
        }

        .google-signin-button {
          background-color: #4285f4; /* Google blue */
          color: white;
        }

        .google-signin-button:hover {
          background-color: #357ae8;
        }

        .review-section {
          background-color: #1e293b;
          border-color: #1e293b;
        }

        .review-header {
          color: #f1f5f9;
        }

        .review-label {
          color: #94a3b8;
        }

        .review-value {
          color: #f1f5f9;
        }

        .back-button {
          color: #94a3b8;
        }

        .back-button:hover {
          color: #f1f5f9;
        }

        .footer-text {
          color: #94a3b8;
        }

        .footer-link {
          color: #f1f5f9;
        }

        .forgot-password a {
          color: #f1f5f9;
        }

        .input-icon,
        .check-icon,
        .toggle-button {
          color: #64748b;
        }

        .toggle-button:hover {
          color: #cbd5e1;
        }

        .spinner {
          border: 2px solid #1e293b;
          border-top: 2px solid transparent;
        }
      }
      .alert-success {
        background-color: #e6ffed;
        border: 1px solid #34d399;
        color: #065f46;
        padding: 15px 20px;
        border-radius: 8px;
        margin-bottom: 20px;
        font-weight: 500;
        animation: fadeIn 0.4s ease-in-out;
      }

      @keyframes fadeIn {
        from {
          opacity: 0;
          transform: translateY(-10px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }
    </style>
  </head>
  <body>
    <!-- Include the error/success messages partial -->
    <%- include('../error.ejs') %>

    <div class="container">
      <div class="form-wrapper">
        <!-- Progress Bar -->
        <div class="progress-container">
          <div class="progress-header">
            <span class="progress-text"
              >Step <span id="currentStep">1</span> of 2</span
            >
            <span class="progress-percent"
              ><span id="progressPercent">50</span>%</span
            >
          </div>
          <div class="progress-bar">
            <div
              class="progress-fill"
              id="progressFill"
              style="width: 50%"
            ></div>
          </div>
        </div>

        <!-- Sign-in Card -->
        <div class="signin-card">
          <!-- Header -->
          <div class="header">
            <div class="icon-container">
              <img src="/images/fox.png" alt="Fox Logo" />
            </div>
            <h1 class="title">Welcome back</h1>
            <p class="subtitle" id="stepDescription">
              Enter your email to continue
            </p>
          </div>

          <!-- Mongoose-based Login Form -->
          <form id="loginForm" class="form" action="/login" method="post">
            <!-- Step 1: Email -->
            <div id="step1" class="signin-step">
              <div class="field-group">
                <label for="email" class="label">Email</label>
                <div class="input-container">
                  <div class="input-icon">
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      width="16"
                      height="16"
                      viewBox="0 0 24 24"
                      fill="none"
                      stroke="currentColor"
                      stroke-width="2"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                    >
                      <path
                        d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"
                      ></path>
                      <polyline points="22,6 12,13 2,6"></polyline>
                    </svg>
                  </div>
                  <input
                    id="email"
                    type="email"
                    placeholder="name@example.com"
                    class="signin-input input-with-icon"
                    name="email"
                    required
                  />
                  <div id="emailCheck" class="check-icon hidden">
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      width="16"
                      height="16"
                      viewBox="0 0 24 24"
                      fill="none"
                      stroke="currentColor"
                      stroke-width="2"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                    >
                      <polyline points="20,6 9,17 4,12"></polyline>
                    </svg>
                  </div>
                </div>
              </div>
              <button
                type="button"
                id="nextStep1"
                class="signin-button"
                disabled
              >
                Continue
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="16"
                  height="16"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                >
                  <path d="M5 12h14"></path>
                  <path d="m12 5 7 7-7 7"></path>
                </svg>
              </button>
            </div>

            <!-- Step 2: Password & Review -->
            <div id="step2" class="signin-step hidden">
              <div class="review-section">
                <h3 class="review-header">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="16"
                    height="16"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke="currentColor"
                    stroke-width="2"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                  >
                    <path
                      d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"
                    ></path>
                    <circle cx="12" cy="12" r="3"></circle>
                  </svg>
                  Account Found
                </h3>
                <div class="review-details">
                  <div class="review-item">
                    <span class="review-label">Email:</span>
                    <span class="review-value" id="reviewEmail"></span>
                  </div>
                </div>
              </div>

              <div class="field-group">
                <label for="password" class="label">Password</label>
                <div class="input-container">
                  <div class="input-icon">
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      width="16"
                      height="16"
                      viewBox="0 0 24 24"
                      fill="none"
                      stroke="currentColor"
                      stroke-width="2"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                    >
                      <rect
                        x="3"
                        y="11"
                        width="18"
                        height="11"
                        rx="2"
                        ry="2"
                      ></rect>
                      <circle cx="12" cy="16" r="1"></circle>
                      <path d="M7 11V7a5 5 0 0 1 10 0v4"></path>
                    </svg>
                  </div>
                  <input
                    id="password"
                    type="password"
                    placeholder="Enter your password"
                    class="signin-input input-with-icon input-with-toggle"
                    name="password"
                    required
                  />
                  <button
                    type="button"
                    id="togglePassword"
                    class="toggle-button"
                  >
                    <svg
                      id="eyeIcon"
                      xmlns="http://www.w3.org/2000/svg"
                      width="16"
                      height="16"
                      viewBox="0 0 24 24"
                      fill="none"
                      stroke="currentColor"
                      stroke-width="2"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                    >
                      <path
                        d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"
                      ></path>
                      <circle cx="12" cy="12" r="3"></circle>
                    </svg>
                    <svg
                      id="eyeOffIcon"
                      xmlns="http://www.w3.org/2000/svg"
                      width="16"
                      height="16"
                      viewBox="0 0 24 24"
                      fill="none"
                      stroke="currentColor"
                      stroke-width="2"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      class="hidden"
                    >
                      <path
                        d="M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24"
                      ></path>
                      <line x1="1" y1="1" x2="23" y2="23"></line>
                    </svg>
                  </button>
                </div>
              </div>

              <div class="forgot-password">
                <a href="#" id="forgotPasswordLink">Forgot your password?</a>
              </div>

              <button
                type="submit"
                id="submitButton"
                name="submit"
                class="signin-button"
              >
                <span id="submitText">Sign in</span>
                <div id="loadingSpinner" class="spinner hidden"></div>
                <span id="loadingText" class="hidden">Signing in...</span>
              </button>
            </div>
          </form>

          <!-- Separator or "OR" section -->
          <div class="my-4 text-center text-gray-500 text-sm">OR</div>

          <!-- Firebase Google Sign-in Button -->
          <button type="button" class="signin-button google-signin-button" id="googleSignInButton">
            <span class="google-icon">
              <img src="https://img.icons8.com/color/18/000000/google-logo.png" alt="Google Logo"/>
            </span>
            Sign in with Google
          </button>

          <!-- Back Button -->
          <button id="backButton" class="back-button hidden">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="16"
              height="16"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
            >
              <path d="M19 12H5"></path>
              <path d="m12 19-7-7 7-7"></path>
            </svg>
            Back to email
          </button>

          <!-- Footer -->
          <div class="footer">
            <p class="footer-text">
              Don't have an account?
              <a href="/register" class="footer-link">Sign up</a>
            </p>
          </div>
        </div>
      </div>
    </div>

    <!-- Firebase SDKs -->
    <script src="https://www.gstatic.com/firebasejs/8.10.1/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.10.1/firebase-auth.js"></script>
    <script>
      // Firebase Configuration (REPLACE WITH YOUR ACTUAL CONFIG)
      const firebaseConfig = {
        apiKey: "AIzaSyAz4_NlvqsUjbYGnQ1R7CnWBG8GPZ9WyPI",
        authDomain: "forgefolio-5febb.firebaseapp.com",
        projectId: "forgefolio-5febb",
        storageBucket: "forgefolio-5febb.firebasestorage.app",
        messagingSenderId: "561145062224",
        appId: "1:561145062224:web:74959bd2f42aeb56ee4255",
        measurementId: "G-8DQN6JYFDQ",
      };


      // Initialize Firebase
      firebase.initializeApp(firebaseConfig);
      const auth = firebase.auth();
      const googleProvider = new firebase.auth.GoogleAuthProvider();

      document.addEventListener("DOMContentLoaded", () => {
        let currentStep = 1;

        const emailInput = document.getElementById("email");
        const passwordInput = document.getElementById("password");

        const nextStep1Btn = document.getElementById("nextStep1");
        const backButton = document.getElementById("backButton");
        const submitButton = document.getElementById("submitButton");

        const step1El = document.getElementById("step1");
        const step2El = document.getElementById("step2");

        const emailCheckEl = document.getElementById("emailCheck");
        const reviewEmailEl = document.getElementById("reviewEmail");

        const eyeIconEl = document.getElementById("eyeIcon");
        const eyeOffIconEl = document.getElementById("eyeOffIcon");
        const togglePasswordBtn = document.getElementById("togglePassword");

        const currentStepEl = document.getElementById("currentStep");
        const progressPercentEl = document.getElementById("progressPercent");
        const progressFillEl = document.getElementById("progressFill");
        const stepDescriptionEl = document.getElementById("stepDescription");

        const googleSignInButton = document.getElementById("googleSignInButton");

        function updateUI() {
          step1El.classList.toggle("hidden", currentStep !== 1);
          step2El.classList.toggle("hidden", currentStep !== 2);
          backButton.classList.toggle("hidden", currentStep === 1);

          const progress = (currentStep / 2) * 100;
          currentStepEl.textContent = currentStep;
          progressPercentEl.textContent = Math.round(progress);
          progressFillEl.style.width = `${progress}%`;

          const descriptions = [
            "Enter your email to continue",
            "Enter your password to sign in",
          ];
          stepDescriptionEl.textContent = descriptions[currentStep - 1];

          if (currentStep === 2) {
            reviewEmailEl.textContent = emailInput.value;
            submitButton.disabled = !passwordInput.value.trim();
          }
        }

        function isValidEmail(email) {
          return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);
        }

        emailInput.addEventListener("input", () => {
          const valid = isValidEmail(emailInput.value);
          emailCheckEl.classList.toggle("hidden", !valid);
          nextStep1Btn.disabled = !valid;
        });

        passwordInput.addEventListener("input", () => {
          if (currentStep === 2) {
            submitButton.disabled = !passwordInput.value.trim();
          }
        });

        // This button now only validates email format and proceeds to password step
        nextStep1Btn.addEventListener("click", () => {
          const email = emailInput.value;
          if (!isValidEmail(email)) return;
          
          // No Firebase email existence check here, just proceed to password step
          // The actual login attempt (Mongoose or Firebase) will happen on final submit
          currentStep = 2;
          updateUI();
          setTimeout(() => passwordInput.focus(), 300);
        });

        backButton.addEventListener("click", () => {
          currentStep = 1;
          updateUI();
          setTimeout(() => emailInput.focus(), 300);
        });

        togglePasswordBtn.addEventListener("click", () => {
          const show = passwordInput.type === "password";
          passwordInput.type = show ? "text" : "password";
          eyeIconEl.classList.toggle("hidden", !show);
          eyeOffIconEl.classList.toggle("hidden", show);
        });

        const loginForm = document.getElementById("loginForm");
        const submitText = document.getElementById("submitText");
        const loadingSpinner = document.getElementById("loadingSpinner");
        const loadingText = document.getElementById("loadingText");

        // Mongoose-based login form submission
        loginForm.addEventListener("submit", (event) => {
          // This form submission goes to the server, which handles Passport local strategy.
          // Client-side loading state is applied here.
          submitButton.disabled = true;
          submitText.classList.add("hidden");
          loadingSpinner.classList.remove("hidden");
          loadingText.classList.add("hidden"); // Ensure loadingText is hidden initially
        });

        // Firebase Google Sign-in
        googleSignInButton.addEventListener("click", async () => {
            // Apply loading state to the Google button or a general loading indicator
            googleSignInButton.disabled = true; // Disable the Google button
            const originalGoogleButtonContent = googleSignInButton.innerHTML;
            googleSignInButton.innerHTML = `<div class="spinner"></div> Signing in...`; // Show spinner

            try {
                const result = await auth.signInWithPopup(googleProvider);
                const idToken = await result.user.getIdToken();

                // Send ID token to your server for Mongoose user creation/login and session management
                const response = await fetch('/firebase-auth', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ idToken }),
                });

                if (response.ok) {
                    // Server successfully processed and logged in the user via Passport
                    window.location.href = '/dashboard'; // Redirect to dashboard
                } else {
                    const errorData = await response.text(); // Get error message from server
                    throw new Error(errorData || 'Server error during Firebase authentication.');
                }

            } catch (error) {
                console.error("Firebase Google Sign-in Error:", error);
                const toastContainer = document.getElementById('toastContainer');
                if (toastContainer) {
                    const errorMessage = error.message || "An unknown error occurred during Google sign-in.";
                    const errorToast = `
                        <div class="toast error">
                            <div class="toast-icon">
                                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-5 h-5">
                                    <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m-9.303 3.376c-.866 1.5.174 3.35 1.94 3.35h14.728c1.766 0 2.806-1.85 1.94-3.35L13.147 3.65a1.865 1.865 0 00-3.294 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z" />
                                </svg>
                            </div>
                            <div class="toast-content">
                                <div class="toast-title">Google Sign-in Error!</div>
                                <div class="toast-message">${errorMessage}</div>
                            </div>
                            <button type="button" class="toast-close-button" onclick="this.closest('.toast').remove()">
                                &times;
                            </button>
                        </div>
                    `;
                    toastContainer.insertAdjacentHTML('beforeend', errorToast);
                }
            } finally {
                // Reset Google button state
                googleSignInButton.disabled = false;
                googleSignInButton.innerHTML = originalGoogleButtonContent;
                // Also ensure the main form's submit button is reset if it was affected
                submitButton.disabled = false;
                submitText.classList.remove("hidden");
                loadingSpinner.classList.add("hidden");
                loadingText.classList.add("hidden");
            }
        });

        updateUI();
      });
    </script>
  </body>
</html>
